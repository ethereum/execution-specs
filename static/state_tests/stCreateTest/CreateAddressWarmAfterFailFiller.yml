CreateAddressWarmAfterFail:
  _info:
    comment: |
      Invokes failing CREATE (because initcode fails) and checks
      if the create address is considered warm in the follow up call as required by EIP-2929.
      Addresses taken from https://toolkit.abdk.consulting/ethereum#contract-address
   
      Written primarily by PaweÅ‚ Bylica (@chfast). Somewhat modified by Ori (@qbzzt)

  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: 1
    currentGasLimit: 3000000000
    currentNumber: 1
    currentTimestamp: 999

  pre:
    # Tx sender
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      nonce: 0
      balance: 1000000000001
      storage: {}
      code: ''

    00000000000000000000000000000000000c0deC:
      nonce: 0
      # Need extra gas to be able to send some to the "random" address
      # And to send to the created address twice
      balance: 0x1000
      storage: {}
      code: |
        :yul london
          object "C" {
            code {
              let failType := calldataload(4)
              let initcode_size 

              // The return values of various actions. Done twice to see if there is a difference
              let create_1 := 0
              let call_created_1 := 2
              let call_created_2 := 3
              let call_empty_1 := 4
              let call_empty_2 := 5

              // The costs of those operations
              let create_1_cost := 10
              let call_created_1_cost := 12
              let call_created_2_cost := 13
              let call_empty_1_cost := 14
              let call_empty_2_cost := 15

              // Make the storage cells we use here are warm
              sstore(create_1, 0xdead60A7)
              sstore(call_created_1, 0xdead60A7)
              sstore(call_created_2, 0xdead60A7)
              sstore(call_empty_1, 0xdead60A7)
              sstore(call_empty_2, 0xdead60A7)
              sstore(call_created_1_cost, 0xdead60A7)
              sstore(call_created_2_cost, 0xdead60A7)
              sstore(call_empty_1_cost, 0xdead60A7)
              sstore(call_empty_2_cost, 0xdead60A7)

              let addrEmpty := 0xd4e7ae083132925a4927c1f5816238ba17b82a00

              // The address where the contract should have been created had things worked out
              // Can be calculated at https://toolkit.abdk.consulting/ethereum#contract-address
              let addrCreated 

              switch failType
              case 0 {    // REVERT inside the constructor
                addrCreated := 0xd4e7ae083132925a4927c1f5816238ba17b82a65
                initcode_size := datasize("revert-constructor")
                datacopy(0, dataoffset("revert-constructor"), initcode_size)
                sstore(create_1, create(0, 0, initcode_size))
              }
              case 10 {    // REVERT inside the constructor, CREATE2
                addrCreated := 0x43255eE039968E0254887FC8c7172736983d878C
                //initcode_size := datasize("revert-constructor")
                //datacopy(0, dataoffset("revert-constructor"), initcode_size)

                // comment protection from solc version changing the bytes
                initcode_size := 5
                mstore(0, 0x60006000fd000000000000000000000000000000000000000000000000000000)
                sstore(create_1, create2(0, 0, initcode_size, 0))
              }
              case 1 {    // Constructor returns 0x6001 bytes, >max contract size
                addrCreated := 0xd4e7ae083132925a4927c1f5816238ba17b82a65
                initcode_size := datasize("code-too-big")
                datacopy(0, dataoffset("code-too-big"), initcode_size)
                sstore(create_1, create(0, 0, initcode_size))
              }
              case 11 {    // Constructor returns 0x6001 bytes, >max contract size
                addrCreated := 0x014001fDbeDE82315F4B8C2a7D45E980A8a4A12e
                initcode_size := datasize("code-too-big")
                datacopy(0, dataoffset("code-too-big"), initcode_size)
                sstore(create_1, create2(0, 0, initcode_size, 0))
              }
              case 2 {    // Invalid opcode in constructor
                addrCreated := 0xd4e7ae083132925a4927c1f5816238ba17b82a65
                initcode_size := datasize("invalid")
                datacopy(0, dataoffset("invalid"), initcode_size)
                sstore(create_1, create(0, 0, initcode_size))

              }
              case 12 {    // Invalid opcode in constructor
                addrCreated := 0xA13d43586820E5D97a3Fd1960625d537c86DC4E7
                //initcode_size := datasize("invalid")
                //datacopy(0, dataoffset("invalid"), initcode_size)
                //sstore(create_1, create2(0, 0, initcode_size, 0))

                // comment protection from solc version changing the bytes
                initcode_size := 6
                mstore(0, 0xfe60106000f30000000000000000000000000000000000000000000000000000)
                sstore(create_1, create2(0, 0, initcode_size, 0))
              }
              case 3 {    // Out of gas (due to constructor returning a huge contract) 
                          // We need it to be a called contract
                          // so the transaction will be overall successful
                addrCreated := 0xa5a6a95fd9554f15ab6986a57519092be2095125
                          // gas amount calculated to cause the CREATE to fail
                sstore(create_1, call(0x7000, 0xC0DE1006, 0, 0, 0, 0, 0))
              }
              case 4 {    // OOG after the CREATE
                          // We need it to be a called contract
                          // so the transaction will be overall successful
                addrCreated := 0xa5a6a95fd9554f15ab6986a57519092be2095125
                          // gas amount calculated to cause failure after the CREATE
                sstore(create_1, call(0x10000, 0xC0DE1006, 0, 0, 0, 0, 0))
              }
              case 5 {    // Nonce too high to create another contract
                addrCreated := 0xB2050fc27aB6d6D42dc0CE6f7C0BF9481a4c3Fc3
                sstore(create_1, call(0x10000, 0xC0DEFFFF, 0, 0, 0, 0, 0))
              }
              case 13 {    // Out of gas (due to constructor returning a huge contract) 
                          // We need it to be a called contract
                          // so the transaction will be overall successful
                addrCreated := 0xd70dF326038a3c7cA8FAc785a99162BFe75CCc46
                          // gas amount calculated to cause the CREATE to fail
                sstore(create_1, call(0x7000, 0x20C0DE1006, 0, 0, 0, 0, 0))
              }
              case 14 {    // OOG after the CREATE2
                           // We need it to be a called contract
                           // so the transaction will be overall successful
                addrCreated := 0xd70dF326038a3c7cA8FAc785a99162BFe75CCc46
                          // gas amount calculated to cause failure after the CREATE
                sstore(create_1, call(0x10000, 0x20C0DE1006, 0, 0, 0, 0, 0))
              }
              case 6 {    // Creating a contract that starts with 0xEF, which is not allowed EIP-3541
                addrCreated := 0xd4e7ae083132925a4927c1f5816238ba17b82a65
                initcode_size := datasize("start-ef")
                datacopy(0, dataoffset("start-ef"), initcode_size)
                sstore(create_1, create(0, 0, initcode_size))
              }
              case 16 {    // Create2 a contract that starts with 0xEF, which is not allowed EIP-3541
                addrCreated := 0x562D97e3E4d6d3C6e791EA64bB73d820871Aa219
                initcode_size := datasize("start-ef")
                datacopy(0, dataoffset("start-ef"), initcode_size)
                sstore(create_1, create2(0, 0, initcode_size, 0))

              }
              case 7 {   // Successful create.
                addrCreated := 0xd4e7ae083132925a4927c1f5816238ba17b82a65
                initcode_size := datasize("success")
                datacopy(0, dataoffset("success"), initcode_size)
                sstore(create_1, create(0, 0, initcode_size))
              }

              case 17 {  // Successfully CREATE2
                addrCreated := 0xf7fef4b66b1570a057d7d5cec5c58846befa5b5c
                initcode_size := datasize("success")
                datacopy(0, dataoffset("success"), initcode_size)
                sstore(create_1, create2(0, 0, initcode_size, 0x5A17))
              }


              default { revert(0,0) }   // Not supposed to ever happen
      

              // Call the create address and measure the gas cost
              sstore(call_created_1_cost, gas())
              sstore(call_created_1, call(0, addrCreated, callvalue(), 0, 0, 0, 0))
              sstore(call_created_1_cost, sub(sload(call_created_1_cost), gas()))

              // Call the create address a second time and measure the gas cost
              sstore(call_created_2_cost, gas())
              sstore(call_created_2, call(0, addrCreated, callvalue(), 0, 0, 0, 0))
              sstore(call_created_2_cost, sub(sload(call_created_2_cost), gas()))

              // Call a empty (cold) address and measure the gas cost
              sstore(call_empty_1_cost, gas())
              sstore(call_empty_1, call(0, addrEmpty, callvalue(), 0, 0, 0, 0))
              sstore(call_empty_1_cost, sub(sload(call_empty_1_cost), gas()))

              // Call the same address again
              sstore(call_empty_2_cost, gas())
              sstore(call_empty_2, call(0, addrEmpty, callvalue(), 0, 0, 0, 0))
              sstore(call_empty_2_cost, sub(sload(call_empty_2_cost), gas()))

              // Stop is necessary because otherwise we get into Yul object boundaries
              stop()
            }
            object "revert-constructor" {   // Data 0, 10
              code {
                 revert(0, 0)
              }
            }
            object "code-too-big" {   // Data 1, 11
              code {
                 return(0, 0x6001)
              }
            }
            object "invalid" {        // Data 2, 12
              code {
                 invalid()
                 return(0, 0x10)
              }
            }
            object "start-ef" {        // Data 6, 16
              code {
                 mstore8(0, 0xEF)    // Cannot be the first byte as per https://eips.ethereum.org/EIPS/eip-3541
                 return(0, 0x10)
              }
            }
            object "success" {         // Data 7, 17
              code {
                return(0, 1)     // A zero, which makes it a STOP when it is called
              }
            }
            object "no-optimization" {
              code {
                 let noOptimization := msize()
              }
            }
          }



    # Data 3 - Out of gas through a constructor that returns too much
    # Data 4 - Out of gas later in the call (past the constructor)
    00000000000000000000000000000000c0de1006:
      nonce: 1
      balance: 0x1000
      storage: {}
      code: |
        :yul berlin
          object "C" {
            code {
              datacopy(0, dataoffset("dummy"), datasize("dummy"))
              sstore(0, create(0, 0, datasize("dummy")))
              stop()
            }
            object "dummy" {
              code {
                return(0,0x6000)
            }
          }
         }  


    # Data 13 - Out of gas through a constructor that returns too much
    # Data 14 - Out of gas later in the call (past the constructor)
    00000000000000000000000000000020c0de1006:
      nonce: 1
      balance: 0x1000
      storage: {}
      code: |
        :yul berlin
          object "C" {
            code {
              datacopy(0, dataoffset("dummy"), datasize("dummy"))
              sstore(0, create2(0, 0, datasize("dummy"), 0))
              stop()
            }
            object "dummy" {
              code {
                return(0,0x6000)
            }
          }
         }  




    # Data 5 - Nonce too high to create another contract
    00000000000000000000000000000000c0deFFFF:
      nonce: 0xFFFFFFFFFFFFFFFF
      balance: 0x1000
      storage: {}
      code: |
        :yul berlin
          object "C" {
            code {
              datacopy(0, dataoffset("dummy"), datasize("dummy"))
              sstore(0, create(0, 0, datasize("dummy")))
              stop()
            }
            object "dummy" {
              code {
                return(0,0x20)
            }
          }
         }  
  
  transaction:
    data:
      - :label create-contructor-revert  :abi fail(uint) 0   # Revert in the constructor
      - :label create2-contructor-revert :abi fail(uint) 10  # Revert in the constructor
      - :label create-code-too-big       :abi fail(uint) 1   # Code too big
      - :label create2-code-too-big      :abi fail(uint) 11  # Code too big
      - :label create-invalid-opcode     :abi fail(uint) 2   # Constructor has invalid opcode
      - :label create2-invalid-opcode    :abi fail(uint) 12  # Constructor has invalid opcode
      - :label create-oog-constructor    :abi fail(uint) 3   # Constructor OOG because it returns the max contract size
      - :label create-oog-post-constr    :abi fail(uint) 4   # OOG after the constructor
      - :label create2-oog-constructor   :abi fail(uint) 13  # Constructor OOG because it returns the max contract size
      - :label create2-oog-post-constr   :abi fail(uint) 14  # OOG after the constructor
      - :label create-high-nonce         :abi fail(uint) 5   # Nonce too high to create an account
      - :label create-0xef               :abi fail(uint) 6   # Contract starts with 0xEF, which is not allowed
      - :label create2-0xef              :abi fail(uint) 16  # Contract starts with 0xEF, which is not allowed
      - :label create-ok                 :abi fail(uint) 7   # Successfully create the account
      - :label create2-ok                :abi fail(uint) 17  # Successfully create2 the account
    gasLimit:
      - 400000000
    gasPrice: 10
    nonce: 0
    to: "00000000000000000000000000000000000c0deC"
    secretKey: "45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
    value:
      - 0
      - 1

  expect:

    # CREATE executed directly by c0deC (and fails)
    - indexes:
        data: 
          - :label create-contructor-revert
          - :label create-code-too-big
          - :label create-invalid-opcode
          - :label create-0xef
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (warm address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        d4e7ae083132925a4927c1f5816238ba17b82a65: # Create address
          shouldnotexist: true



    # CREATE executed directly by c0deC (and fails)
    - indexes:
        data: 
          - :label create-contructor-revert
          - :label create-code-too-big
          - :label create-invalid-opcode
          - :label create-0xef
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 32028    # Gas cost of call to created address (warm address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a65:
          nonce: 0
          balance: 2   # Funded with two calls after failed create.
          code: ""     # No code


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code





    # CREATE2 executed directly by c0deC (and fails because of REVERT)
    - indexes:
        data: 
          - :label create2-contructor-revert
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (warm address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        d4e7ae083132925a4927c1f5816238ba17b82a65: # Create address
          shouldnotexist: true

    # CREATE2 executed directly by c0deC (and fails because of REVERT)
    - indexes:
        data: 
          - :label create2-contructor-revert
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 32028    # Gas cost of call to created address (warm address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, filled when ETH is sent to it
        43255eE039968E0254887FC8c7172736983d878C:
          nonce: 0
          balance: 2   # Funded with two calls after failed create.
          code: ""     # No code


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code





    # CREATE2 executed directly by c0deC (and fails because the code starts with 0xEF)
    - indexes:
        data: 
          - :label create2-0xef
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (warm address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        562D97e3E4d6d3C6e791EA64bB73d820871Aa219: # Create address
          shouldnotexist: true

    # CREATE2 executed directly by c0deC (and fails because the code starts with 0xef)
    - indexes:
        data: 
          - :label create2-0xef
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 32028    # Gas cost of call to created address (warm address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, filled when ETH is sent to it
        562D97e3E4d6d3C6e791EA64bB73d820871Aa219:
          nonce: 0
          balance: 2   # Funded with two calls after failed create.
          code: ""     # No code


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code




    # CREATE2 executed directly by c0deC (and fails because code is too big)
    - indexes:
        data: 
          - :label create2-code-too-big
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (warm address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        014001fDbeDE82315F4B8C2a7D45E980A8a4A12e: # Create address
          shouldnotexist: true

    # CREATE2 executed directly by c0deC (and fails because the returned code is too big)
    - indexes:
        data: 
          - :label create2-code-too-big
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 32028    # Gas cost of call to created address (warm address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, filled when ETH is sent to it
        014001fDbeDE82315F4B8C2a7D45E980A8a4A12e:
          nonce: 0
          balance: 2   # Funded with two calls after failed create.
          code: ""     # No code


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code





    # CREATE2 executed directly by c0deC (and fails because of invalid opcode)
    - indexes:
        data: 
          - :label create2-invalid-opcode
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (warm address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        A13d43586820E5D97a3Fd1960625d537c86DC4E7: # Create address
          shouldnotexist: true



    # CREATE2 executed directly by c0deC (and fails because of invalid opcode)
    - indexes:
        data: 
          - :label create2-invalid-opcode
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1    # Create failed, but nonce is bumped.
          storage:
            0: 0    # Create failed
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 32028    # Gas cost of call to created address (warm address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, filled when ETH is sent to it
        A13d43586820E5D97a3Fd1960625d537c86DC4E7:
          nonce: 0
          balance: 2   # Funded with two calls after failed create.
          code: ""     # No code


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code





    # Call to a different account to do CREATE, which fails because of the extremely high nonce
    - indexes:
        data: 
          - :label create-high-nonce
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 0    # No nonce bump
          storage:
            0: 1    # Call to creator contract successful
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # When the contract that calls CREATE subsequently reverts, the
            # warming up of the address created also doesn't happen
            12:  2828    # Gas cost of call to created address (cold address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address


        B2050fc27aB6d6D42dc0CE6f7C0BF9481a4c3Fc3:
          shouldnotexist: true

        # Empty address
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          shouldnotexist: true



    # Call to a different account to do CREATE, which fails because of the extremely high nonce
    - indexes:
        data: 
          - :label create-high-nonce
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 0   # No nonce bump
          storage:
            0: 1    # Creator account call is successful
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 34528    # Gas cost of call to created address (cold address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address



        # Empty address
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code


        # Address where smart contract should have been created
        B2050fc27aB6d6D42dc0CE6f7C0BF9481a4c3Fc3:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code






    # Call to a different account to do CREATE[2], which reverts as out of gas
    - indexes:
        data: 
          - :label create-oog-constructor
          - :label create-oog-post-constr   
          - :label create2-oog-constructor
          - :label create2-oog-post-constr   
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 0    # No nonce bump
          storage:
            0: 0    # Call to creator contract reverted
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # When the contract that calls CREATE subsequently reverts, the
            # warming up of the address created also doesn't happen
            12:  2828    # Gas cost of call to created address (cold address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        d4e7ae083132925a4927c1f5816238ba17b82a65: # Create address
          shouldnotexist: true



    # Call to a different account to do CREATE[2], which reverts
    - indexes:
        data: 
          - :label create-oog-constructor
          - :label create-oog-post-constr   
          - :label create2-oog-constructor
          - :label create2-oog-post-constr   
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 0   # No nonce bump
          storage:
            0: 0    # Call to creator contract reverted
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            # The first call is expensive because when sending eth to an empty address it has to be
            # created, which is an extra cost
            12: 34528    # Gas cost of call to created address (cold address)
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address



        # Empty address
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code




    # CREATE executed directly by c0deC (successfully)
    - indexes:
        data: 
          - :label create-ok
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1 
          storage:
            0: 0xd4e7ae083132925a4927c1f5816238ba17b82a65  # Create successful, created this address
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (warm address)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        d4e7ae083132925a4927c1f5816238ba17b82a65: # Create address
          code: 0x00

    # CREATE executed directly by c0deC (successfully)
    - indexes:
        data: 
          - :label create-ok
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1
          storage:
            0: 0xd4e7ae083132925a4927c1f5816238ba17b82a65  # Create successful, created this address
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:  7028    # Gas cost of call to created address, no need to create it
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, nonce=1 because it really is created
        d4e7ae083132925a4927c1f5816238ba17b82a65:
          nonce: 1
          balance: 2     # Funded with two calls after create.
          code: 0x00     # One byte of code


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code






    # CREATE2 executed directly by c0deC (successfully)
    - indexes:
        data: 
          - :label create2-ok
        gas: !!int -1
        value:
          - !!int 0
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
        00000000000000000000000000000000000c0deC:
          nonce: 1 
          storage:
            0: 0xf7fef4b66b1570a057d7d5cec5c58846befa5b5c # Address created by CREATE2
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:   328    # Gas cost of call to created address (looks like it is cold)
            13:   316    # Gas cost of 2nd call to created address
            14:  2828    # Gas cost of call to empty (cold) address
            15:   316    # Gas cost of 2nd call to empty (now warm) address

        f7fef4b66b1570a057d7d5cec5c58846befa5b5c:  # Create2 address
          code: 0x00
          nonce: 1


    # CREATE2 executed directly by c0deC (successfully)
    - indexes:
        data: 
          - :label create2-ok
        value:
          - !!int 1
      network:
        - ">=Cancun"
      result:
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1

        00000000000000000000000000000000000c0deC:
          nonce: 1
          storage:
            0: 0xf7fef4b66b1570a057d7d5cec5c58846befa5b5c # Address created by CREATE2
            2: 1    # Call to create address successful
            3: 1    # Call to create address successful
            4: 1    # Call to random address successful
            5: 1    # Call to random address successful
            12:  7028    # Gas cost of call to created address, no need to create it
            13:  7016    # Gas cost of 2nd call to created address, much cheaper because 
            14: 34528    # Gas cost of call to empty random (cold) address
            15:  7016    # Gas cost of second call to (now warm) address


        # Create address, nonce=1 because it really is created
        f7fef4b66b1570a057d7d5cec5c58846befa5b5c:  # Create2 address
          code: 0x00
          nonce: 1
          balance: 2     # Funded with two calls after create.


        # Empty address, filled when ETH is sent to it
        d4e7ae083132925a4927c1f5816238ba17b82a00:
          nonce: 0
          balance: 2   # Funded with two calls
          code: ""     # No code



name: Python Specification

on:
  push:
    branches:
      - master
      - mainnet
      - 'forks/**'
  workflow_dispatch:
  pull_request:

jobs:
  static:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Tox and any other packages
        shell: bash
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get install --yes --force-yes build-essential pkg-config
          pip install 'tox>=4.11,<5' requests
      - name: Run static checks
        run: tox -e static

  py3:
    runs-on: [self-hosted-ghr, size-xl-x64]
    needs: static
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: ./.github/actions/setup-env
      - name: Run py3 tests
        run: tox -e py3

  pypy3:
    runs-on: [self-hosted-ghr, size-xl-x64]
    needs: static
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "pypy3.11"
      - uses: ./.github/actions/setup-env
      - name: Run pypy3 tests
        run: tox -e pypy3
        env:
          PYPY_GC_MAX: "10G"

  json_infra:
    runs-on: [self-hosted-ghr, size-xl-x64]
    needs: static
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: ./.github/actions/setup-env
      - name: Run json infra tests
        run: tox -e json_infra
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: .tox/coverage.xml
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
  
  optimized:
    runs-on: [self-hosted-ghr, size-xl-x64]
    needs: static
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: ./.github/actions/setup-env
      - name: Run optimized tests
        run: tox -e optimized

  mutation-test:
    runs-on: ubuntu-latest
    needs: static
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        fork: [frontier, homestead, tangerine_whistle, spurious_dragon, byzantium, constantinople, istanbul, berlin, london, paris, shanghai, cancun, prague, osaka]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install project with test dependencies
        run: pip install -e '.[test]'
      - name: Install mutmut
        run: pip install mutmut==3.3.0
      - name: Apply mutmut patch
        run: |
          git clone https://github.com/souradeep-das/mutate-execution-specs.git
          cp mutate-execution-specs/mutmut.patch .
          MUTMUT_FILE_TO_PATCH=$(python3 -c "import mutmut, os; print(os.path.join(os.path.dirname(mutmut.__file__), '__main__.py'))")
          patch $MUTMUT_FILE_TO_PATCH < mutmut.patch
      - name: Find changed files for fork
        id: changed
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }} | grep "^src/ethereum/${{ matrix.fork }}/" || true)
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Display changed files
        run: |
          echo "Changed files:"
          echo "${{ steps.changed.outputs.changed_files }}"
      - name: Skip if no changes for this fork
        if: steps.changed.outputs.changed_files == ''
        run: echo "No changes for ${{ matrix.fork }}, skipping mutmut."
      - name: Configure mutmut for changed files
        if: steps.changed.outputs.changed_files != ''
        run: |
          echo '[tool.mutmut]' > pyproject.toml
          FILES=$(echo "${{ steps.changed.outputs.changed_files }}" | awk '{printf "\"%s\", ", $0}' | sed 's/, $//')
          echo "paths_to_mutate = [ $FILES ]" >> pyproject.toml
          echo "tests_dir = [\"tests/${{ matrix.fork }}/\"]" >> pyproject.toml
          echo "debug = true" >> pyproject.toml
      - name: Verify mutmut config
        if: steps.changed.outputs.changed_files != ''
        run: |
          echo "pyproject.toml contents:"
          cat pyproject.toml
      - name: Copy dependencies for mutation testing
        if: steps.changed.outputs.changed_files != ''
        run: |
          mkdir -p mutants/src
          cp -r src/* mutants/src/
      - name: Run mutmut
        if: steps.changed.outputs.changed_files != ''
        run: |
          mutmut run
          mutmut results

[tox]
min_version = 2.0
envlist = py3,pypy3,json_infra,static

[testenv:static]
extras =
    lint
    optimized
    test
    doc
commands =
    isort src --check --diff --skip-glob "src/ethereum_spec_tests/*"
    black src --check --diff --exclude "src/ethereum_spec_tests/*"
    flake8 src --exclude "src/ethereum_spec_tests/*"
    mypy src --exclude "src/ethereum_spec_tests/*" --namespace-packages
    ethereum-spec-lint

[testenv:json_infra]
extras =
    test
commands =
    pytest \
        -m "not slow" \
        -n auto --maxprocesses 10 \
        --cov-config=pyproject.toml \
        --cov=ethereum \
        --cov-report=term \
        --cov-report "xml:{toxworkdir}/coverage.xml" \
        --no-cov-on-fail \
        --cov-branch \
        --ignore-glob='tests/json_infra/fixtures/*' \
        --basetemp="{temp_dir}/pytest" \
        tests/json_infra

[testenv:py3]
extras =
    test
commands =
    ethereum-spec-fill \
        -m "not slow and not zkevm and not benchmark" \
        -n auto --maxprocesses 6 \
        --basetemp="{temp_dir}/pytest" \
        --clean \
        --until Osaka \
        tests/eest

[testenv:pypy3]
extras =
    test
passenv =
    PYPY_GC_MAX
commands =
    ethereum-spec-fill \
        --tb=no \
        --show-capture=no \
        --disable-warnings \
        -m "not slow and not zkevm and not benchmark" \
        -n auto --maxprocesses 3 \
        --basetemp="{temp_dir}/pytest" \
        --clean \
        --until Osaka \
        tests/eest

[testenv:optimized]
extras =
    test
    optimized
passenv =
    PYPY_GC_MAX
commands =
    pytest \
        -m "not slow and not evm_tools" \
        -n auto --maxprocesses 5 \
        --ignore-glob='tests/json_infra/fixtures/*' \
        --basetemp="{temp_dir}/pytest" \
        --optimized \
        tests/json_infra

[testenv:doc]
basepython = python3
extras = doc
commands =
    docc --output "{toxworkdir}/docs"
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs" / "index.html"))'

[metadata]
name = ethereum
description = Ethereum specification, provided as a Python package for tooling and testing
long_description = file: README.md
long_description_content_type = text/markdown
version = attr: ethereum.__version__
url = https://github.com/ethereum/execution-specs
license_files =
    LICENSE.md
classifiers =
    License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication

[options]
packages =
    ethereum_spec_tools
    ethereum_spec_tools/lint
    ethereum_spec_tools/lint/lints
    ethereum
    ethereum/frontier
    ethereum/frontier/utils
    ethereum/frontier/vm
    ethereum/frontier/vm/instructions
    ethereum/frontier/vm/precompiled_contracts
    ethereum/utils
    ethereum/crypto
    ethereum_optimized/
    ethereum_optimized/frontier
    ethereum/homestead
    ethereum/homestead/utils
    ethereum/homestead/vm
    ethereum/homestead/vm/instructions
    ethereum/homestead/vm/precompiled_contracts
    ethereum_optimized/homestead
    ethereum/dao_fork
    ethereum/dao_fork/utils
    ethereum/dao_fork/vm
    ethereum/dao_fork/vm/instructions
    ethereum/dao_fork/vm/precompiled_contracts
    ethereum_optimized/dao_fork
    ethereum/tangerine_whistle
    ethereum/tangerine_whistle/utils
    ethereum/tangerine_whistle/vm
    ethereum/tangerine_whistle/vm/instructions
    ethereum/tangerine_whistle/vm/precompiled_contracts
    ethereum_optimized/tangerine_whistle
    ethereum/spurious_dragon
    ethereum/spurious_dragon/utils
    ethereum/spurious_dragon/vm
    ethereum/spurious_dragon/vm/instructions
    ethereum/spurious_dragon/vm/precompiled_contracts
    ethereum_optimized/spurious_dragon
    ethereum/byzantium
    ethereum/byzantium/utils
    ethereum/byzantium/vm
    ethereum/byzantium/vm/instructions
    ethereum/byzantium/vm/precompiled_contracts
    ethereum_optimized/byzantium
    ethereum/constantinople
    ethereum/constantinople/utils
    ethereum/constantinople/vm
    ethereum/constantinople/vm/instructions
    ethereum/constantinople/vm/precompiled_contracts
    ethereum_optimized/constantinople
    ethereum/istanbul
    ethereum/istanbul/utils
    ethereum/istanbul/vm
    ethereum/istanbul/vm/instructions
    ethereum/istanbul/vm/precompiled_contracts
    ethereum_optimized/istanbul
    ethereum/muir_glacier
    ethereum/muir_glacier/utils
    ethereum/muir_glacier/vm
    ethereum/muir_glacier/vm/instructions
    ethereum/muir_glacier/vm/precompiled_contracts
    ethereum_optimized/muir_glacier
    ethereum/berlin
    ethereum/berlin/utils
    ethereum/berlin/vm
    ethereum/berlin/vm/instructions
    ethereum/berlin/vm/precompiled_contracts
    ethereum_optimized/berlin
    ethereum/london
    ethereum/london/utils
    ethereum/london/vm
    ethereum/london/vm/instructions
    ethereum/london/vm/precompiled_contracts
    ethereum_optimized/london
    ethereum/arrow_glacier
    ethereum/arrow_glacier/utils
    ethereum/arrow_glacier/vm
    ethereum/arrow_glacier/vm/instructions
    ethereum/arrow_glacier/vm/precompiled_contracts
    ethereum_optimized/arrow_glacier
    ethereum/gray_glacier
    ethereum/gray_glacier/utils
    ethereum/gray_glacier/vm
    ethereum/gray_glacier/vm/instructions
    ethereum/gray_glacier/vm/precompiled_contracts
    ethereum_optimized/gray_glacier
    ethereum/paris
    ethereum/paris/utils
    ethereum/paris/vm
    ethereum/paris/vm/instructions
    ethereum/paris/vm/precompiled_contracts
    ethereum_optimized/paris
    ethereum/shanghai
    ethereum/shanghai/utils
    ethereum/shanghai/vm
    ethereum/shanghai/vm/instructions
    ethereum/shanghai/vm/precompiled_contracts
    ethereum_optimized/shanghai


package_dir =
    =src

python_requires = >=3.8
install_requires =
    pysha3>=1,<2
    coincurve>=17,<18
    typing_extensions>=4

[options.package_data]
ethereum =
    py.typed
    assets/mainnet.json
    assets/mainnet_genesis_alloc_rlp.hex
    assets/cache_sizes_2048_epochs.json
    assets/dataset_sizes_2048_epochs.json
    assets/blocks/block_1.json
    assets/blocks/block_1234567.json
    assets/blocks/block_12964999.json

[options.entry_points]
console_scripts =
    ethereum-spec-lint = ethereum_spec_tools.lint:main
    ethereum-spec-sync = ethereum_spec_tools.sync:main
    ethereum-spec-diff = ethereum_spec_tools.diff:main
    ethereum-spec-new-fork = ethereum_spec_tools.new_fork:main

[options.extras_require]
test =
    pytest>=6.2,<7
    pytest-cov>=2.12,<3
    pytest-xdist>=2.3.0,<3
    GitPython>=3.1.0,<3.2
    filelock>=3.9.0,<3.10
    requests

lint =
    isort>=5.8,<6
    mypy==0.812; implementation_name == "cpython"
    black>=22.3.0,<23; implementation_name == "cpython"
    flake8-spellcheck>=0.24,<0.25
    flake8-docstrings>=1.6,<2
    flake8-bugbear>=22.3.23,<23.0.0
    flake8>=3.9,<4

doc =
    sphinx-autoapi>=1.9.0,<2
    undocinclude>=0.2.0,<0.3
    sphinx==4.0.2
    rstdiff>=0.5.1,<0.6
    picklebuilder>=0.2.0,<0.3
    sphinx-rtd-theme>=1.0.0,<2.0

doc-autobuild =
    sphinx-autobuild==2021.3.14

optimized =
    rust-pyspec-glue>=0.0.5,<0.1.0
    ethash==0.5.1a1

[flake8]
dictionaries=en_US,python,technical
docstring-convention = all
extend-ignore =
    E203    # Ignore: Whitespace before ':'
    D107    # Ignore: Missing docstring in __init__
    D200    # Ignore: One-line docstring should fit on one line with quotes
    D203    # Ignore: 1 blank line required before class docstring
    D205    # Ignore: blank line required between summary line and description
    D212    # Ignore: Multi-line docstring summary should start at the first line
    D400    # Ignore: First line should end with a period
    D401    # Ignore: First line should be in imperative mood
    D410    # Ignore: Missing blank line after section
    D411    # Ignore: Missing blank line before section
    D412    # Ignore: No blank lines allowed between a section header and its content
    D413    # Ignore: Missing blank line after last section
    D414    # Ignore: Section has no content
    D415    # Ignore: First line should end with a period, question mark, or exclamation point
    D416    # Ignore: Section name should end with a colon

extend-exclude =
    setup.py
    tests/
    doc/

per-file-ignores =
    src/ethereum/base_types.py:D105,SC100,SC200

# vim: set ft=dosini:
